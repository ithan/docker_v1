# =============================================================================
# DIRECTUS ENVIRONMENT CONFIGURATION
# =============================================================================
# This file contains all possible Directus configuration options
# Active options are uncommented, while available but unused options are commented
# Documentation: https://docs.directus.io/self-hosted/config-options.html

# =============================================================================
# GENERAL
# =============================================================================

# Secret used for JWT tokens, should be a secure random string
# This is required and must be kept secret in production
DIRECTUS_SECRET=your-secure-random-string-here

# Admin user credentials - will be created on first run
ADMIN_EMAIL=admin@example.com
ADMIN_PASSWORD=d1r3ctu5
# ADMIN_TOKEN=                           # Optional API token for the admin user

# API Server Configuration
HOST=0.0.0.0                             # IP or host the API listens on
PORT=8055                                # Port to run the API under
PUBLIC_URL=http://localhost:8055         # URL where your API can be reached

# Log Configuration
LOG_LEVEL=debug                          # One of: fatal, error, warn, info, debug, trace or silent
LOG_STYLE=pretty                         # One of: pretty, raw
# LOG_HTTP_IGNORE_PATHS=                 # Comma-separated list of HTTP request paths to ignore in logs

# General API Settings
MAX_PAYLOAD_SIZE=8mb                     # Controls the maximum request body size
# ROOT_REDIRECT=./admin                  # Redirect the root of the application to a specific route
# SERVE_APP=true                         # Whether or not to serve the Data Studio
# UNIX_SOCKET_PATH=                      # Unix socket to listen on (ignores HOST/PORT if set)

# Query Limits
# MAX_BATCH_MUTATION=Infinity            # Maximum number of items for batch mutations
# MAX_RELATIONAL_DEPTH=10                # Maximum depth when filtering/querying relational fields
# QUERY_LIMIT_DEFAULT=100                # Default query limit when not defined in API request
# QUERY_LIMIT_MAX=-1                     # Maximum query limit accepted on API requests
# ROBOTS_TXT="User-agent: *\nDisallow: /" # Content for /robots.txt endpoint
# TEMP_PATH=./node_modules/.directus     # Where Directus temporary files should be managed
# MIGRATIONS_PATH=./migrations           # Where custom migrations are located

# GraphQL Configuration
# GRAPHQL_INTROSPECTION=true             # Enable GraphQL Introspection
# GRAPHQL_SCHEMA_CACHE_CAPACITY=100      # How many user GraphQL schemas to store in memory
# GRAPHQL_SCHEMA_GENERATION_MAX_CONCURRENT=5 # How many GraphQL schemas can be generated simultaneously
# GRAPHQL_QUERY_TOKEN_LIMIT=5000         # How many GraphQL query tokens will be parsed

# =============================================================================
# DATABASE
# =============================================================================

# PostgreSQL connection settings
DB_CLIENT=pg                             # Database client: pg, mysql, sqlite3, etc.
DB_HOST=postgres                         # Database host
DB_PORT=5432                             # Database port
DB_DATABASE=directus                     # Database name
DB_USER=directus                         # Database user
DB_PASSWORD=directus                     # Database password
# DB_CONNECTION_STRING=                  # Alternative to individual connection parameters
# DB_EXCLUDE_TABLES=spatial_ref_sys,sysdiagrams # Tables for Directus to ignore
# DB_VERSION=                            # Specify DB version when using non-standard DB
# DB_HEALTHCHECK_THRESHOLD=150           # Healthcheck timeout threshold in ms

# Database connection pool settings
DB_POOL__MIN=2                           # Minimum number of connections
DB_POOL__MAX=10                          # Maximum number of connections

# SSL Settings (uncomment if needed)
# DB_SSL__REJECT_UNAUTHORIZED=false      # Whether to reject self-signed certificates
# DB_SSL__CA=                            # CA certificate content
# DB_SSL__CA_FILE=                       # Path to CA certificate file

# MySQL Specific (uncomment if using MySQL)
# DB_CHARSET=UTF8_GENERAL_CI             # Charset for MySQL connections

# SQLite Specific (uncomment if using SQLite)
# DB_FILENAME=                           # Path to SQLite database file

# =============================================================================
# CACHE
# =============================================================================

# Enable data caching for improved performance
CACHE_ENABLED=true                       # Whether to enable data caching
CACHE_TTL=5m                             # How long the data cache is persisted
CACHE_AUTO_PURGE=true                    # Automatically purge cache when data changes
CACHE_STORE=redis                        # Where to store the cache: memory or redis
# CACHE_CONTROL_S_MAXAGE=0               # Value for s-maxage in Cache-Control header
# CACHE_AUTO_PURGE_IGNORE_LIST=directus_activity,directus_presets # Collections that don't trigger cache purge
# CACHE_SYSTEM_TTL=                      # How long system cache is persisted
CACHE_SCHEMA=true                        # Whether to cache the database schema
# CACHE_SCHEMA_MAX_ITERATIONS=100        # Max iterations for schema cache (for high-scale apps)
# CACHE_SCHEMA_SYNC_TIMEOUT=10000        # Timeout for schema sync between containers
# CACHE_SCHEMA_FREEZE_ENABLED=false      # Freeze schema to improve memory efficiency
# CACHE_NAMESPACE=system-cache           # How to scope the cache data
# CACHE_STATUS_HEADER=                   # Header to return cache status (HIT, MISS)
# CACHE_VALUE_MAX_SIZE=false             # Maximum size of cached values (bytes or human-readable)
# CACHE_SKIP_ALLOWED=false               # Allow skipping cache via Cache-Control: no-store
# CACHE_HEALTHCHECK_THRESHOLD=150        # Healthcheck timeout threshold in ms

# Redis connection for cache
REDIS=redis://keydb:6379                 # Redis connection string, overrides individual settings
REDIS_HOST=keydb                         # Redis hostname
REDIS_PORT=6379                          # Redis port
# REDIS_USERNAME=                        # Redis username
# REDIS_PASSWORD=                        # Redis password
# REDIS_DB=                              # Redis database number
REDIS_ENABLED=true                     # Whether Redis should be used

# Redis Sentinel Configuration (uncomment if using Redis Sentinel)
# REDIS_NAME=redis-cache                 # Sentinel cluster name 
# REDIS_SENTINEL_PASSWORD=               # Sentinel password
# REDIS_SENTINELS=json:[{"host": "sentinel-host", "port": 26379}] # Sentinel instances

# =============================================================================
# SECURITY
# =============================================================================

# Authentication Token Configuration
ACCESS_TOKEN_TTL=15m                     # How long access tokens are valid
REFRESH_TOKEN_TTL=7d                     # How long refresh tokens are valid
SESSION_COOKIE_TTL=1d                    # How long users stay logged in to the app
# EMAIL_VERIFICATION_TOKEN_TTL=7d        # How long email verification tokens are valid
# USER_INVITE_TOKEN_TTL=7d               # How long user invitations are valid

# Cookie Settings
# REFRESH_TOKEN_COOKIE_DOMAIN=           # Domain for refresh token cookie
# REFRESH_TOKEN_COOKIE_SECURE=false      # Set secure flag for refresh token cookie
# REFRESH_TOKEN_COOKIE_SAME_SITE=lax     # SameSite policy for refresh token cookie
# REFRESH_TOKEN_COOKIE_NAME=directus_refresh_token # Name of refresh token cookie
# SESSION_COOKIE_DOMAIN=                 # Domain for session cookie
# SESSION_COOKIE_SECURE=false            # Set secure flag for session cookie
# SESSION_COOKIE_SAME_SITE=lax           # SameSite policy for session cookie
# SESSION_COOKIE_NAME=directus_session_token # Name of session cookie
# SESSION_REFRESH_GRACE_PERIOD=10s       # Grace period for session refresh

# Security Timing
# LOGIN_STALL_TIME=500                   # Stall time for login requests (ms)
# REGISTER_STALL_TIME=750                # Stall time for registration requests (ms)

# Security Headers and IP Settings
# IP_TRUST_PROXY=true                    # Trust proxy headers for IP detection
# IP_CUSTOM_HEADER=false                 # Custom header for IP address
# ASSETS_CONTENT_SECURITY_POLICY=        # CSP for asset endpoint
# IMPORT_IP_DENY_LIST=0.0.0.0,169.254.169.254 # IPs to block file imports from
# CONTENT_SECURITY_POLICY_*=             # CSP header overrides
# HSTS_ENABLED=false                     # Enable HSTS header
# HSTS_*=                                # HSTS configuration options

# URL Security
# PASSWORD_RESET_URL_ALLOW_LIST=         # Allowed URLs for password reset
# USER_INVITE_URL_ALLOW_LIST=            # Allowed URLs for user invites
# USER_REGISTER_URL_ALLOW_LIST=          # Allowed URLs for user registration

# =============================================================================
# HASHING (for passwords and the hash field)
# =============================================================================

# HASH_MEMORY_COST=4096                  # Memory usage for hashing in KiB (4 MiB)
# HASH_LENGTH=32                         # Hash output length in bytes
# HASH_TIME_COST=3                       # Number of iterations (higher = stronger but slower)
# HASH_PARALLELISM=1                     # Number of parallel threads for hashing
# HASH_TYPE=2                            # Hash algorithm: 0=argon2d, 1=argon2i, 2=argon2id
# HASH_ASSOCIATED_DATA=                  # Extra non-secret value to include in hash

# =============================================================================
# CORS (Cross-Origin Resource Sharing)
# =============================================================================

CORS_ENABLED=true                        # Enable CORS headers
CORS_ORIGIN=true                         # Access-Control-Allow-Origin (true = match Origin header)
CORS_METHODS=GET,POST,PATCH,DELETE       # Access-Control-Allow-Methods
CORS_ALLOWED_HEADERS=Content-Type,Authorization # Access-Control-Allow-Headers
CORS_EXPOSED_HEADERS=Content-Range       # Access-Control-Expose-Headers
CORS_CREDENTIALS=true                    # Access-Control-Allow-Credentials
CORS_MAX_AGE=18000                       # Access-Control-Max-Age (in seconds)

# =============================================================================
# RATE LIMITING
# =============================================================================

# Per-IP Rate Limiting
RATE_LIMITER_ENABLED=true                # Enable rate limiting per IP
RATE_LIMITER_POINTS=50                   # Allowed requests per duration
RATE_LIMITER_DURATION=1                  # Time window in seconds
# RATE_LIMITER_STORE=memory              # Where to store counts (memory or redis)
# RATE_LIMITER_HEALTHCHECK_THRESHOLD=150 # Healthcheck timeout threshold in ms

# Global Rate Limiting
# RATE_LIMITER_GLOBAL_ENABLED=false      # Enable global rate limiting
# RATE_LIMITER_GLOBAL_POINTS=1000        # Total allowed requests per duration
# RATE_LIMITER_GLOBAL_DURATION=1         # Time window in seconds
# RATE_LIMITER_GLOBAL_HEALTHCHECK_THRESHOLD=150 # Healthcheck timeout threshold in ms

# Registration Rate Limiting
# RATE_LIMITER_REGISTRATION_ENABLED=true # Enable rate limiting for user registration
# RATE_LIMITER_REGISTRATION_POINTS=5     # Allowed registration attempts per duration
# RATE_LIMITER_REGISTRATION_DURATION=60  # Time window in seconds

# Server Load Protection
# PRESSURE_LIMITER_ENABLED=true          # Enable pressure-based rate limiting
# PRESSURE_LIMITER_SAMPLE_INTERVAL=250   # Measuring interval in ms
# PRESSURE_LIMITER_MAX_EVENT_LOOP_UTILIZATION=0.99 # Max event loop usage (0-1)
# PRESSURE_LIMITER_MAX_EVENT_LOOP_DELAY=500 # Max event loop delay in ms
# PRESSURE_LIMITER_MAX_MEMORY_RSS=false  # Max memory usage in bytes
# PRESSURE_LIMITER_MAX_MEMORY_HEAP_USED=false # Max heap usage in bytes
# PRESSURE_LIMITER_RETRY_AFTER=false     # Retry-After header value

# =============================================================================
# FILE STORAGE
# =============================================================================

# Storage Configuration
STORAGE_LOCATIONS=local                  # Comma-separated list of storage locations
STORAGE_LOCAL_DRIVER=local               # Driver for default storage
STORAGE_LOCAL_ROOT=./uploads             # Root directory for local storage
# STORAGE_LOCAL_HEALTHCHECK_THRESHOLD=750 # Healthcheck timeout threshold in ms

# File Upload Limits
FILES_MAX_UPLOAD_SIZE=100mb              # Maximum file upload size
# FILES_MIME_TYPE_ALLOW_LIST=*/*         # Allowed MIME types (glob syntax)

# File Metadata
# FILE_METADATA_ALLOW_LIST=ifd0.Make,ifd0.Model,exif.FNumber,exif.ExposureTime,exif.FocalLength,exif.ISOSpeedRatings
                                         # Metadata fields to extract during upload

# Chunked Uploads (TUS protocol)
# TUS_ENABLED=false                      # Enable chunked uploads
# TUS_CHUNK_SIZE=8mb                     # Size of each chunk
# TUS_UPLOAD_EXPIRATION=10m              # Expiration time for inactive uploads
# TUS_CLEANUP_SCHEDULE=0 * * * *         # Cron schedule to clean expired uploads

# Additional Storage Providers (uncomment and configure as needed)

# S3 Storage Example
# STORAGE_S3_DRIVER=s3
# STORAGE_S3_KEY=your-access-key
# STORAGE_S3_SECRET=your-secret-key
# STORAGE_S3_BUCKET=your-bucket-name
# STORAGE_S3_REGION=us-east-1
# STORAGE_S3_ENDPOINT=s3.amazonaws.com
# STORAGE_S3_ACL=
# STORAGE_S3_SERVER_SIDE_ENCRYPTION=
# STORAGE_S3_FORCE_PATH_STYLE=false

# Azure Storage Example
# STORAGE_AZURE_DRIVER=azure
# STORAGE_AZURE_CONTAINER_NAME=your-container
# STORAGE_AZURE_ACCOUNT_NAME=your-account-name
# STORAGE_AZURE_ACCOUNT_KEY=your-account-key
# STORAGE_AZURE_ENDPOINT=https://{ACCOUNT_NAME}.blob.core.windows.net

# Google Cloud Storage Example
# STORAGE_GCS_DRIVER=gcs
# STORAGE_GCS_KEY_FILENAME=/path/to/key.json
# STORAGE_GCS_BUCKET=your-bucket-name

# =============================================================================
# ASSETS & TRANSFORMATIONS
# =============================================================================

# Asset Caching
ASSETS_CACHE_TTL=30d                   # Browser cache duration for assets
# ASSETS_TRANSFORM_MAX_CONCURRENT=25     # Max simultaneous transformations
# ASSETS_TRANSFORM_IMAGE_MAX_DIMENSION=6000 # Max width/height for transformations
# ASSETS_TRANSFORM_TIMEOUT=7500ms        # Max time for asset transformation
# ASSETS_TRANSFORM_MAX_OPERATIONS=5      # Max transform operations allowed
# ASSETS_INVALID_IMAGE_SENSITIVITY_LEVEL=warning # Sensitivity to invalid images

# =============================================================================
# AUTHENTICATION PROVIDERS
# =============================================================================

# AUTH_PROVIDERS=                        # Comma-separated list of auth providers
# AUTH_DISABLE_DEFAULT=false             # Disable the default email/password provider

# OAuth 2.0 Example (GitHub)
# AUTH_GITHUB_DRIVER=oauth2
# AUTH_GITHUB_CLIENT_ID=your-client-id
# AUTH_GITHUB_CLIENT_SECRET=your-client-secret
# AUTH_GITHUB_AUTHORIZE_URL=https://github.com/login/oauth/authorize
# AUTH_GITHUB_ACCESS_URL=https://github.com/login/oauth/access_token
# AUTH_GITHUB_PROFILE_URL=https://api.github.com/user
# AUTH_GITHUB_ALLOW_PUBLIC_REGISTRATION=false
# AUTH_GITHUB_DEFAULT_ROLE_ID=your-role-id

# OpenID Example (Google)
# AUTH_GOOGLE_DRIVER=openid
# AUTH_GOOGLE_CLIENT_ID=your-client-id
# AUTH_GOOGLE_CLIENT_SECRET=your-client-secret
# AUTH_GOOGLE_ISSUER_URL=https://accounts.google.com/.well-known/openid-configuration
# AUTH_GOOGLE_IDENTIFIER_KEY=email
# AUTH_GOOGLE_ALLOW_PUBLIC_REGISTRATION=false
# AUTH_GOOGLE_REQUIRE_VERIFIED_EMAIL=true
# AUTH_GOOGLE_DEFAULT_ROLE_ID=your-role-id

# LDAP Example
# AUTH_LDAP_DRIVER=ldap
# AUTH_LDAP_CLIENT_URL=ldap://ldap.example.com
# AUTH_LDAP_BIND_DN=cn=admin,dc=example,dc=com
# AUTH_LDAP_BIND_PASSWORD=admin-password
# AUTH_LDAP_USER_DN=ou=users,dc=example,dc=com
# AUTH_LDAP_GROUP_DN=ou=groups,dc=example,dc=com

# SAML Example
# AUTH_SAML_DRIVER=saml
# AUTH_SAML_SP_METADATA=<XML metadata for service provider>
# AUTH_SAML_IDP_METADATA=<XML metadata for identity provider>
# AUTH_SAML_DEFAULT_ROLE_ID=your-role-id

# =============================================================================
# DATA RETENTION
# =============================================================================

# RETENTION_ENABLED=false                # Enable automatic data retention
# RETENTION_SCHEDULE=0 0 * * *           # When to check for removable records (cron)
# RETENTION_BATCH=500                    # Max records to delete in one batch
# ACTIVITY_RETENTION=90d                 # How long to keep activity records
# REVISIONS_RETENTION=90d                # How long to keep revision records
# FLOW_LOGS_RETENTION=90d                # How long to keep flow execution logs

# =============================================================================
# METRICS & TELEMETRY
# =============================================================================

METRICS_ENABLED=true                     # Enable Prometheus metrics
METRICS_TOKENS=prometheus          # Tokens for metrics authentication
METRICS_SERVICES=database,cache,redis,storage # Services to collect metrics for
# METRICS_SCHEDULE=*/1 * * * *           # When to generate metrics (cron)

TELEMETRY=true                           # Allow anonymous usage data collection
# TELEMETRY_URL=https://telemetry.directus.io/ # Telemetry submission URL
# TELEMETRY_AUTHORIZATION=               # Optional auth header for telemetry

# =============================================================================
# EMAIL
# =============================================================================

# Email settings - uncomment and configure as needed
# EMAIL_FROM=no-reply@example.com        # From address for emails
# EMAIL_TRANSPORT=smtp                   # Transport: sendmail, smtp, mailgun, ses
# EMAIL_VERIFY_SETUP=true                # Verify email configuration on startup
# EMAIL_TEMPLATES_PATH=./templates       # Path to custom email templates

# Sendmail Transport
# EMAIL_SENDMAIL_NEW_LINE=unix           # Newline style: unix or windows
# EMAIL_SENDMAIL_PATH=/usr/sbin/sendmail # Path to sendmail executable

# SMTP Transport
# EMAIL_SMTP_HOST=smtp.example.com       # SMTP server hostname
# EMAIL_SMTP_PORT=587                    # SMTP server port
# EMAIL_SMTP_USER=user                   # SMTP username
# EMAIL_SMTP_PASSWORD=password           # SMTP password
# EMAIL_SMTP_POOL=true                   # Use connection pooling
# EMAIL_SMTP_SECURE=true                 # Use TLS
# EMAIL_SMTP_IGNORE_TLS=false            # Ignore STARTTLS
# EMAIL_SMTP_NAME=                       # Client hostname for HELO

# Mailgun Transport
# EMAIL_MAILGUN_API_KEY=your-api-key     # Mailgun API key
# EMAIL_MAILGUN_DOMAIN=mg.example.com    # Your Mailgun domain
# EMAIL_MAILGUN_HOST=api.mailgun.net     # Mailgun API host

# AWS SES Transport
# EMAIL_SES_CREDENTIALS__ACCESS_KEY_ID=your-key-id
# EMAIL_SES_CREDENTIALS__SECRET_ACCESS_KEY=your-secret-key
# EMAIL_SES_REGION=us-east-1             # AWS region for SES

# =============================================================================
# EXTENSIONS & FLOWS
# =============================================================================

# Extensions Configuration
EXTENSIONS_PATH=./extensions              # Path to extensions folder
EXTENSIONS_AUTO_RELOAD=true               # Auto reload extensions on changes
# EXTENSIONS_MUST_LOAD=false             # Exit if any extension fails to load
# EXTENSIONS_CACHE_TTL=                  # How long to cache app extensions in browser
# EXTENSIONS_LOCATION=                   # Storage location for extensions
# EXTENSIONS_LIMIT=                      # Max marketplace extensions allowed

# Flows Configuration
FLOWS_RUN_SCRIPT_MAX_MEMORY=64           # Max memory for Run Script operation (MB)
FLOWS_RUN_SCRIPT_TIMEOUT=30000           # Max time for Run Script operation (ms)
# FLOWS_ENV_ALLOW_LIST=                  # Env vars accessible in flows

# Marketplace Configuration
# MARKETPLACE_TRUST=sandbox              # Trust level: sandbox or all
# MARKETPLACE_REGISTRY=https://registry.directus.io # Registry URL

# =============================================================================
# SYNCHRONIZATION & WEBSOCKETS
# =============================================================================

# Synchronization
# SYNCHRONIZATION_STORE=memory           # Store for sync: memory or redis
# SYNCHRONIZATION_NAMESPACE=directus-sync # Redis namespace for sync

# WebSockets
WEBSOCKETS_ENABLED=true                  # Enable WebSocket functionality
# WEBSOCKETS_HEARTBEAT_ENABLED=true      # Send periodic ping signals
# WEBSOCKETS_HEARTBEAT_PERIOD=30         # Ping interval in seconds

# REST WebSockets
WEBSOCKETS_REST_ENABLED=true             # Enable REST over WebSockets
# WEBSOCKETS_REST_PATH=/websocket        # REST WebSocket endpoint
# WEBSOCKETS_REST_CONN_LIMIT=Infinity    # Max simultaneous connections
# WEBSOCKETS_REST_AUTH=handshake         # Auth method: public, handshake, strict
# WEBSOCKETS_REST_AUTH_TIMEOUT=30        # Seconds before closing unauthenticated connection

# GraphQL WebSockets
WEBSOCKETS_GRAPHQL_ENABLED=true          # Enable GraphQL subscriptions
# WEBSOCKETS_GRAPHQL_PATH=/graphql       # GraphQL WebSocket endpoint
# WEBSOCKETS_GRAPHQL_CONN_LIMIT=Infinity # Max simultaneous connections
# WEBSOCKETS_GRAPHQL_AUTH=handshake      # Auth method: public, handshake, strict
# WEBSOCKETS_GRAPHQL_AUTH_TIMEOUT=30     # Seconds before closing unauthenticated connection

# Logs WebSockets
# WEBSOCKETS_LOGS_ENABLED=true           # Enable log streaming via WebSockets
# WEBSOCKETS_LOGS_LEVEL=info             # Log level to stream
# WEBSOCKETS_LOGS_STYLE=pretty           # Log format: pretty or raw
# WEBSOCKETS_LOGS_CONN_LIMIT=Infinity    # Max simultaneous connections

# =============================================================================
# PERFORMANCE & OPTIMIZATION
# =============================================================================

# Performance Settings
RELATIONAL_BATCH_SIZE=25000              # Rows loaded at once for relational queries
EXPORT_BATCH_SIZE=5000                   # Rows loaded at once when exporting

# User Limits
# USERS_ADMIN_ACCESS_LIMIT=Infinity      # Max users with admin access
# USERS_APP_ACCESS_LIMIT=Infinity        # Max users with app access
# USERS_API_ACCESS_LIMIT=Infinity        # Max API-only users

# Schema Caching
CACHE_SCHEMA=true                        # Cache database schema
CACHE_SCHEMA_TTL=1d                      # How long to cache schema

# =============================================================================
# PM2 PROCESS MANAGEMENT (Docker/PM2 only)
# =============================================================================

# PM2_INSTANCES=1                        # Number of instances to run
# PM2_EXEC_MODE=cluster                  # Execution mode: fork or cluster
# PM2_MAX_MEMORY_RESTART=                # Restart if memory exceeds this value
# PM2_MIN_UPTIME=                        # Min uptime to be considered started
# PM2_LISTEN_TIMEOUT=                    # Time before forcing reload if not listening
# PM2_KILL_TIMEOUT=                      # Time before sending SIGKILL
# PM2_MAX_RESTARTS=                      # Max number of restarts on failure
# PM2_RESTART_DELAY=0                    # Delay before restart after crash
# PM2_AUTO_RESTART=false                 # Auto-restart on unexpected crash
# PM2_LOG_ERROR_FILE=                    # Error log path
# PM2_LOG_OUT_FILE=                      # Output log path
