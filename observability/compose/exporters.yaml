# Various exporters for system and service metrics

# Include common configuration
include:
  - ../../utils/logging.yml
  - ../../utils/healthchecks.yml

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    # restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
    # ports:
    #   - "9100:9100"
    networks:
      - cms_network
    logging:
      <<: *default-logging
      options:
        max-size: "5m"
        max-file: "2"
        tag: "{{.Name}}"
        labels: "service,environment"
        env: "service=monitoring,container_name={{.Name}}"

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres_exporter:password@postgres:5432/postgres?sslmode=disable"
      PG_EXPORTER_AUTO_DISCOVER_DATABASES: "true"
    # ports:
    #   - "9187:9187"
    networks:
      - cms_network
    logging:
      <<: *default-logging
      options:
        max-size: "5m"
        max-file: "2"
        tag: "{{.Name}}"
        labels: "service,environment"
        env: "service=monitoring,container_name={{.Name}}"

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: redis-exporter
    # restart: unless-stopped
    environment:
      REDIS_ADDR: "keydb:6379"
    # ports:
    #   - "9121:9121"
    networks:
      - cms_network
    logging:
      <<: *default-logging
      options:
        max-size: "5m"
        max-file: "2"
        tag: "{{.Name}}"
        labels: "service,environment"
        env: "service=monitoring,container_name={{.Name}}"

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    # restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    # ports:
    #   - "8080:8080"
    networks:
      - cms_network
    command: --docker_only
    logging:
      <<: *default-logging
      options:
        max-size: "5m"
        max-file: "2"
        tag: "{{.Name}}"
        labels: "service,environment"
        env: "service=monitoring,container_name={{.Name}}"
