# =============================================
# OPTIMIZED POSTGRESQL CONFIGURATION FOR CMS
# =============================================
# Focused on development environments with good 
# indexing support and performance monitoring

# ----- CONNECTION SETTINGS -----
listen_addresses = '*'                  # Listen on all network interfaces
max_connections = 100                   # Sufficient for local development

# ----- MEMORY SETTINGS -----
shared_buffers = 512MB                  # Increased for better index caching (25% of RAM recommended)
effective_cache_size = 2GB              # Estimate of available system cache (50-75% of RAM)
maintenance_work_mem = 128MB            # Increased for faster index creation
work_mem = 32MB                         # Per-operation memory (helps with complex queries)

# ----- QUERY PLANNER SETTINGS -----
random_page_cost = 1.1                  # Optimized for SSD storage
effective_io_concurrency = 200          # Higher for SSDs to allow more concurrent I/O operations

# ----- PARALLELISM -----
max_worker_processes = 8                # Max background processes
max_parallel_workers_per_gather = 4     # Max workers per query operation
max_parallel_workers = 8                # Max total parallel workers

# ----- WAL (WRITE-AHEAD LOG) -----
wal_buffers = 16MB                      # Memory buffer for WAL
min_wal_size = 1GB                      # Minimum WAL size before recycling
max_wal_size = 4GB                      # Maximum WAL size before checkpoint
checkpoint_completion_target = 0.9      # Spreads checkpoint writes over time
synchronous_commit = off                # Better performance for development (data loss risk acceptable)
fsync = on                              # Ensures data integrity even with sync_commit off
full_page_writes = on                   # Safety feature for crash recovery

# ----- EXTENSIONS -----
shared_preload_libraries = 'pg_stat_statements,auto_explain,pg_wait_sampling'

# ----- QUERY MONITORING (auto_explain) -----
# Identifies and logs slow queries with execution plans
auto_explain.log_min_duration = 500     # Log queries taking longer than 500ms
auto_explain.log_analyze = on           # Include actual execution statistics
auto_explain.log_buffers = on           # Include buffer usage statistics
auto_explain.log_timing = on            # Include timing information
auto_explain.log_triggers = on          # Include trigger execution information
auto_explain.log_verbose = on           # Include detailed information
auto_explain.log_nested_statements = on # Include sub-statements

# ----- QUERY STATISTICS (pg_stat_statements) -----
# Tracks query execution statistics for performance analysis
pg_stat_statements.track = all          # Track all statements (including nested ones)
pg_stat_statements.max = 10000          # Maximum number of statements to track
track_activity_query_size = 4096        # Maximum query string size to retain

# ----- AUTOVACUUM SETTINGS -----
# Prevents database bloat and maintains index efficiency
autovacuum = on                         # Enable automatic cleanup
autovacuum_max_workers = 3              # Parallel vacuum workers
autovacuum_naptime = 20s                # Time between autovacuum runs (shorter for dev)
autovacuum_vacuum_threshold = 50        # Run vacuum when 50+ rows are affected
autovacuum_analyze_threshold = 50       # Run analyze when 50+ rows are affected
autovacuum_vacuum_scale_factor = 0.1    # Vacuum when 10% of table is affected
autovacuum_analyze_scale_factor = 0.05  # Analyze when 5% of table is affected

# ----- LOGGING CONFIGURATION -----
log_destination = 'stderr'              # Send logs to standard error (for Docker)
logging_collector = off                  # Save logs to files
log_directory = 'pg_log'                # Directory for log files
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'  # Log filename format
log_rotation_age = 1d                   # Rotate logs daily
log_rotation_size = 10MB                # Or when they reach 10MB
# log_min_duration_statement = 500       # Log queries that take more than 500ms
log_statement = 'all'                   # Log all statements
log_checkpoints = on                    # Log checkpoint information
log_connections = off                    # Log connections
log_disconnections = off                 # Log disconnections
log_lock_waits = on                     # Log when a session waits for a lock
log_temp_files = 0                      # Log all temp file usage
log_line_prefix = '%m [%p] %q%u@%d '    # Timestamp, process ID, and connection info

# ----- INDEX OPTIMIZATION -----
# Settings optimized for environments with many indexes
maintenance_work_mem = 128MB            # Higher for faster index creation/maintenance
default_statistics_target = 100         # Better statistics for query planning
random_page_cost = 1.1                  # Lower value encourages index usage on SSDs
cpu_index_tuple_cost = 0.005            # Default cost for processing index entries
cpu_tuple_cost = 0.01                   # Default cost for processing tuples

# ----- DEVELOPER EXPERIENCE SETTINGS -----
statement_timeout = 0                   # No statement timeout by default
idle_in_transaction_session_timeout = 0 # No timeout for idle transactions